package holidaybookingappclient;

import java.io.IOException;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.time.*;
import java.time.temporal.*;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ejbholidaybookingapp.HolidaySystemAppBeanRemote;
import entityclasses.EmployeeDTO;

@WebServlet("/EmployeesServlet")
public class EmployeesServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

    @EJB
	private HolidaySystemAppBeanRemote holidaySystemAppBean;

    public EmployeesServlet() {
        super();
    }

	/* https://stackoverflow.com/questions/4600034/calculate-number-of-weekdays-between-two-dates-in-java */
    protected long days(Date start, Date end){
        //Ignore argument check

        Calendar c1 = Calendar.getInstance();
        c1.setTime(start);
        int w1 = c1.get(Calendar.DAY_OF_WEEK);
        c1.add(Calendar.DAY_OF_WEEK, -w1);

        Calendar c2 = Calendar.getInstance();
        c2.setTime(end);
        int w2 = c2.get(Calendar.DAY_OF_WEEK);
        c2.add(Calendar.DAY_OF_WEEK, -w2);

        //end Saturday to start Saturday 
        long days = (c2.getTimeInMillis()-c1.getTimeInMillis())/(1000*60*60*24);
        long daysWithoutWeekendDays = days-(days*2/7);

        // Adjust days to add on (w2) and days to subtract (w1) so that Saturday
        // and Sunday are not included
        if (w1 == Calendar.SUNDAY && w2 != Calendar.SATURDAY) {
            w1 = Calendar.MONDAY;
        } else if (w1 == Calendar.SATURDAY && w2 != Calendar.SUNDAY) {
            w1 = Calendar.FRIDAY;
        } 

        if (w2 == Calendar.SUNDAY) {
            w2 = Calendar.MONDAY;
        } else if (w2 == Calendar.SATURDAY) {
            w2 = Calendar.FRIDAY;
        }

        return daysWithoutWeekendDays-w1+w2;
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			java.util.Date startUtilDate = new SimpleDateFormat("dd/MM/yyyy").parse("30/04/2020");
			java.sql.Date startDate = new java.sql.Date(startUtilDate.getTime());

			java.util.Date finalUtilDate = new SimpleDateFormat("dd/MM/yyyy").parse("15/05/2020");
			java.sql.Date finalDate = new java.sql.Date(finalUtilDate.getTime());

			calcWeekDays1(startDate, finalDate);
		} catch (ParseException e) {
			e.printStackTrace();
		}

		List<EmployeeDTO> allEmployees = holidaySystemAppBean.getAllEmployees();
		List<EmployeeDTO> allDeletedEmployees = holidaySystemAppBean.getAllDeletedEmployees();
		request.setAttribute("allEmployees", allEmployees);
		request.setAttribute("allDeletedEmployees", allDeletedEmployees);
		request.getRequestDispatcher("/employee.jsp").forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//doGet(request, response);
	}

}
