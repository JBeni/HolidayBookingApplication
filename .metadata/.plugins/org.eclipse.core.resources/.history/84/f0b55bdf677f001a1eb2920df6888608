package mastering;

import java.sql.Date;
import java.util.List;

import javax.ejb.EJB;
import javax.ejb.Schedule;
import javax.ejb.Stateless;

import ejbholidaybookingapp.HolidayRemainingAppBeanRemote;
import ejbholidaybookingapp.HolidaySystemAppBeanRemote;
import ejbholidaybookingutilsapp.HolidayUtilsClass;
import entityclasses.EmployeeDTO;
import entityclasses.HolidayRemainingDTO;
import entityclasses.HolidayRequestDTO;
import model.THolidayRequest;

@Stateless
public class Timer {

	@EJB
	private HolidaySystemAppBeanRemote holiday;

	@EJB
	private HolidayRemainingAppBeanRemote holidayRemainingAppBean;

	public Timer() {
	}

	/* https://stackoverflow.com/questions/16059564/ejb-3-1-timer-to-schedule-1st-of-every-month
	 * Answered by Piotr Nowicki */
	@Schedule(dayOfMonth="15", hour="23", minute="19", persistent=false)
	public void runOncePerMonthForOneYearCheckingEmployees() {
		java.util.Date currentUtilDate = new java.util.Date();
		Date currentDate = new Date(currentUtilDate.getTime());

		List<HolidayRemainingDTO> holRemainingRecords = holidayRemainingAppBean.getAllHolidayRemaining();
		for (HolidayRemainingDTO e : holRemainingRecords) {
			if (currentDate.compareTo(e.getOneYearDateCheck()) > 0) {
			}
		}

/*
		15 April 2020 - 15 April 2021
		15 April 2021 - 15 April 2022
		15 April 2022 - 15 April 2023
		15 April 2023 - 15 April 2024
		15 April 2024 - 15 April 2025

		daca data curenta e mai mare decat de 15 April 2025 (hire date * 5) atunci se activeaza mecanismul
		si crestem cu o zi zilele de vacanta..
*/

		System.out.println(currentDate);
		System.out.println(HolidayUtilsClass.formatDateFromString("14/04/2020"));
	}

	/* https://stackoverflow.com/questions/16059564/ejb-3-1-timer-to-schedule-1st-of-every-month
	 * Answered by Piotr Nowicki */
	@Schedule(dayOfMonth="1", hour="2")
	public void runOncePerYearForFiveYearsCheckingEmployees() {
	}

}
