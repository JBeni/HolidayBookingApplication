package holidaybookingappclient;

import java.io.IOException;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.time.*;
import java.time.temporal.*;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ejbholidaybookingapp.HolidaySystemAppBeanRemote;
import entityclasses.EmployeeDTO;

@WebServlet("/EmployeesServlet")
public class EmployeesServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

    @EJB
	private HolidaySystemAppBeanRemote holidaySystemAppBean;

    public EmployeesServlet() {
        super();
    }

	/* https://stackoverflow.com/questions/4600034/calculate-number-of-weekdays-between-two-dates-in-java */
    private long countWeekDaysMath(LocalDate start, LocalDate stop ) {
        // Code taken from Answer by Roland.
        // https://stackoverflow.com/a/44942039/642706
        long count = 0;
        final DayOfWeek startW = start.getDayOfWeek();
        final DayOfWeek stopW = stop.getDayOfWeek();

        final long days = ChronoUnit.DAYS.between( start , stop );
        final long daysWithoutWeekends = days - 2 * ( ( days + startW.getValue() ) / 7 );

        //adjust for starting and ending on a Sunday:
        count = daysWithoutWeekends + ( startW == DayOfWeek.SUNDAY ? 1 : 0 ) + ( stopW == DayOfWeek.SUNDAY ? 1 : 0 );

        return count;
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			java.util.Date startUtilDate = new SimpleDateFormat("dd/MM/yyyy").parse("01/05/2020");
			java.sql.Date startDate = new java.sql.Date(startUtilDate.getTime());

			java.util.Date finalUtilDate = new SimpleDateFormat("dd/MM/yyyy").parse("30/05/2020");
			java.sql.Date finalDate = new java.sql.Date(finalUtilDate.getTime());

			days(startDate, finalDate);
		} catch (ParseException e) {
			e.printStackTrace();
		}

		List<EmployeeDTO> allEmployees = holidaySystemAppBean.getAllEmployees();
		List<EmployeeDTO> allDeletedEmployees = holidaySystemAppBean.getAllDeletedEmployees();
		request.setAttribute("allEmployees", allEmployees);
		request.setAttribute("allDeletedEmployees", allDeletedEmployees);
		request.getRequestDispatcher("/employee.jsp").forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//doGet(request, response);
	}

}
